1.메소드란 함수라고도 하며 접근제한자 [static or instance] returnType 메소드명(매개변수 1, 매개변수2 ...){}로 선언가능하다.

2. 접근 제한자는 public, protected, private, default가 있다

3. public은 어디서든 접근가능하게 해주고, private는 같은 파일내에서만 사용 가능하며, default는 메소드를 선언할 당시 접근제한자를 명시하지 않을때 사용되며 같은 패키지에서만 사용 가능하다.

4. returnType은 메소드가 호출될때 함수기능을 실행하고 나올 데이터의 타입을 명시해주는것이다. String, int, double.... 함수기능만 수행하고 나올데이터가 없을경우 void를 사용한다.

5. 매개변수는 메소드가 호출될때 입력받을 변수값으로 메소드를 사용할때 넣고싶은 값을 넣어 계산을 해준다거나, 실행을 해주는 등으로 사용할 수 있다.

6. 오버로딩을이용하여 메소드를 좀더 편하게 이용가능하다. 같은 변수명으로 매개변수의 데이터타입을 다르게 설정할 경우 오버로딩이 된다
ex) public static void printLine(char n, int j){for (int i = 0; i <= j; i++) {System.out.print(n);}System.out.println();//개행}
    public static void printLine(char n){for (int i = 0; i <= 20; i++) {System.out.print(n);}System.out.println();//개행}

7. 오버로딩을 이용할때 기본타입을 만들어 두고 사용자가 설정할수 있는 기능을 오버로딩으로 만들어두면 편하게 사용가능하다

8. 메소드의 장점은 반복적으로 처리해야할 프로세스를 사용해야할때 메소드로 작성하여 간단하게 호출해서 사용할 수 있다는 점이다.
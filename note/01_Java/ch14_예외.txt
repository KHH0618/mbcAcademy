1. 예외란 프로그램에서 문제가 발생될 만한 곳을 예상하여 사전에 문제가 발생하면 이렇게 하라고 가이드라인을 만들어 두는것
2. 예외처리를 하지않으면 단순한 이유로도 예외가 발생할 경우 프로그램이 멈출수있기때문이다.
3. 예외처리를 하기 위해선 try ~ catch문법을 사용한다
ex) try {
	    try블럭 ; exeption이 발생할 가능성이 있는 명령문들(문제가 발생할 수 있는 로직을 기술)

	}catch(exeption타입 exeption변수) {
	    그 exeption을 처리하는 명령문(try블록안에서 문제가 발생했을 때 대처방안 기술);

	} finally {
	    exeption 발생 여부와 상관없이 맨 마지막에 실행할 명령문;
	}
4. 체크 예외(Runtime exception외 exception) : 컴파일러가 체크하는 예외, 컴파일 시점에 try-catch를 하지 않으면 항상 throws에 던지는 예외 선언을 해야한다
5. 언체크 예외(Runtime exception) : 컴파일러가 체크하지 않는 예외, try-catch를 하지 않아도 throws를 생략할 수 있다.
6. 강제로 예외 발생시키기 (코드에서 예외 발생시키기) : throw new Exception(“에러메세지”)
7. 예외처리는 프로세스가 죽지않게 해주는 역할을 한다. 내가 직접 처리할 수도 남에게 throw할수도 있다.